// Mocks generated by Mockito 5.4.6 from annotations
// in matchtcg_app/test/data/repositories/user_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:matchtcg_app/data/models/user_requests.dart' as _i5;
import 'package:matchtcg_app/data/services/secure_storage_service.dart' as _i6;
import 'package:matchtcg_app/data/services/user_api_service.dart' as _i3;
import 'package:matchtcg_app/domain/entities/auth_user_info.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthUserInfo_0 extends _i1.SmartFake implements _i2.AuthUserInfo {
  _FakeAuthUserInfo_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [UserApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserApiService extends _i1.Mock implements _i3.UserApiService {
  MockUserApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.AuthUserInfo> getCurrentUser() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUser, []),
            returnValue: _i4.Future<_i2.AuthUserInfo>.value(
              _FakeAuthUserInfo_0(this, Invocation.method(#getCurrentUser, [])),
            ),
          )
          as _i4.Future<_i2.AuthUserInfo>);

  @override
  _i4.Future<_i2.AuthUserInfo> updateProfile(
    _i5.UpdateProfileRequest? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [request]),
            returnValue: _i4.Future<_i2.AuthUserInfo>.value(
              _FakeAuthUserInfo_0(
                this,
                Invocation.method(#updateProfile, [request]),
              ),
            ),
          )
          as _i4.Future<_i2.AuthUserInfo>);

  @override
  _i4.Future<void> deleteAccount() =>
      (super.noSuchMethod(
            Invocation.method(#deleteAccount, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<dynamic> exportUserData() =>
      (super.noSuchMethod(
            Invocation.method(#exportUserData, []),
            returnValue: _i4.Future<dynamic>.value(),
          )
          as _i4.Future<dynamic>);
}

/// A class which mocks [SecureStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorageService extends _i1.Mock
    implements _i6.SecureStorageService {
  MockSecureStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> write(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#write, [key, value]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<String?> read(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#read, [key]),
            returnValue: _i4.Future<String?>.value(),
          )
          as _i4.Future<String?>);

  @override
  _i4.Future<void> delete(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [key]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteAll() =>
      (super.noSuchMethod(
            Invocation.method(#deleteAll, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> saveAccessToken(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#saveAccessToken, [token]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<String?> getAccessToken() =>
      (super.noSuchMethod(
            Invocation.method(#getAccessToken, []),
            returnValue: _i4.Future<String?>.value(),
          )
          as _i4.Future<String?>);

  @override
  _i4.Future<void> saveRefreshToken(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#saveRefreshToken, [token]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<String?> getRefreshToken() =>
      (super.noSuchMethod(
            Invocation.method(#getRefreshToken, []),
            returnValue: _i4.Future<String?>.value(),
          )
          as _i4.Future<String?>);

  @override
  _i4.Future<void> saveUserInfo(Map<String, dynamic>? userInfo) =>
      (super.noSuchMethod(
            Invocation.method(#saveUserInfo, [userInfo]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<Map<String, dynamic>?> getUserInfo() =>
      (super.noSuchMethod(
            Invocation.method(#getUserInfo, []),
            returnValue: _i4.Future<Map<String, dynamic>?>.value(),
          )
          as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<void> clearAuthData() =>
      (super.noSuchMethod(
            Invocation.method(#clearAuthData, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
